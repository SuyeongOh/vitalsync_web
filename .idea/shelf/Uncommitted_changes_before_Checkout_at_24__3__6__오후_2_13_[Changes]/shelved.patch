Index: server/vital/analysis/vital_calculator.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from .utils import *\r\nfrom .visualizer import *\r\nimport numpy as np\r\nimport scipy\r\n\r\n\r\nclass VitalCalculator:\r\n    def __init__(self, ppg, fs, model, save_dict):\r\n        self.ppg = ppg\r\n        self.fs = fs\r\n        self.model = model\r\n        self.peaks = None\r\n        self.ibis = None\r\n\r\n        self.fft_hr = 0\r\n        self.ibi_hr = 0\r\n        self.hrv = 0\r\n\r\n        self.save_dict = save_dict\r\n\r\n    def visualize_ppg(self):\r\n        bvp_fft_plot(self.ppg, self.fs, self.save_dict)\r\n\r\n    def visualize_rgb(self, rgb):\r\n        rgb_plot(rgb, self.save_dict)\r\n\r\n    def calc_fft_hr(self):\r\n        signal = np.expand_dims(self.ppg, 0)\r\n        N = next_power_of_2(signal.shape[1])\r\n        f_ppg, pxx_ppg = scipy.signal.periodogram(signal, fs=self.fs, nfft=N, detrend=False)\r\n        pxx_ppg = pxx_ppg.squeeze()\r\n\r\n        # get hr range\r\n        f_ppg = f_ppg.squeeze()\r\n        fmask_ppg = np.argwhere((f_ppg >= 0.75) & (f_ppg <= 2.5))\r\n\r\n        masked_ppg = np.take(f_ppg, fmask_ppg)\r\n        masked_pxx_ppg = np.take(pxx_ppg, fmask_ppg).squeeze()\r\n\r\n        masked_fft_hr_ppg = np.take(masked_ppg, np.argmax(masked_pxx_ppg)) * 60\r\n        self.fft_hr = masked_fft_hr_ppg\r\n\r\n        return masked_fft_hr_ppg\r\n\r\n    def calc_ibi_hr(self):\r\n        self.peaks, _ = peak_detection(self.ppg, self.fs, 45, 150,\r\n                                               windowsize=60 / self.fft_hr if self.fft_hr > 0 else 0.75)\r\n        self.peaks = [peak for peak in self.peaks if self.ppg[peak] > 0.8]\r\n        self.ibis = np.diff(self.peaks) / self.fs * 1000\r\n        hr_list = np.divide(60000, self.ibis)\r\n        self.ibi_hr = np.mean(hr_list)\r\n        return self.ibi_hr\r\n\r\n    def calc_hrv(self):\r\n        self.hrv = np.std(self.ibis)\r\n        return self.hrv\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/server/vital/analysis/vital_calculator.py b/server/vital/analysis/vital_calculator.py
--- a/server/vital/analysis/vital_calculator.py	
+++ b/server/vital/analysis/vital_calculator.py	
@@ -54,3 +54,23 @@
     def calc_hrv(self):
         self.hrv = np.std(self.ibis)
         return self.hrv
+
+    def calc_LFHF(self):
+        low_frequency = (0.04, 0.15)
+        high_frequency = (0.15, 0.4)
+
+        expanded_signal = np.expand_dims(self.ppg, 0)
+        N = next_power_of_2(expanded_signal.shape[1])
+        f, pxx = scipy.signal.periodogram(self.ppg, self.fs, nfft=N, detrend=False)
+
+        # Find the low frequency and high frequency indices
+        lf_indices = np.where((f >= low_frequency[0]) & (f <= low_frequency[1]))
+        hf_indices = np.where((f >= high_frequency[0]) & (f <= high_frequency[1]))
+
+        # Calculate the LF and HF power
+        lf_power = np.trapz(pxx[lf_indices], f[lf_indices])
+        hf_power = np.trapz(pxx[hf_indices], f[hf_indices])
+
+        # Calculate the LF/HF ratio
+        lf_hf_ratio = lf_power / hf_power
+        return lf_hf_ratio
